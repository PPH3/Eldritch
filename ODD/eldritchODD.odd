<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml"
	schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0"
   xmlns:sch="http://purl.oclc.org/dsdl/schematron"
   xmlns:rng="http://relaxng.org/ns/structure/1.0"
   version="2.9.1"
   xml:lang="en">
  <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>Eldritch Project ODD: Markup on H. P. Lovecraft's Writings</title>
         </titleStmt>
         <publicationStmt>
            <authority>Prepared in TEI P5 by the Eldritch project team on newtFire.org. GitHub repository: <ref target="https://github.com/PPH3/Eldritch/"/>. Date last worked on: <date when="2016-11-10">10 November 2016</date></authority>
            <availability><licence><!--Choose and identify a Creative Commons license for distribution. Look here: https://creativecommons.org/share-your-work/--></licence></availability>
         </publicationStmt>
         <sourceDesc>
            <p>Born digital.</p>
         </sourceDesc>
      </fileDesc>
  </teiHeader>
  <text>
      <body>
         <schemaSpec ident="EldritchODD" start="TEI teiCorpus" prefix="tei">
            <moduleRef key="tei"/>
            <moduleRef key="core" include="listBibl bibl title author editor publisher pubPlace biblScope cit quote rs desc date time choice sic reg del head lg l gap milestone pb lb note num p q ref respStmt resp textLang"/>
            <!--The elements that start the above list, from listBibl through biblScope, are used for bibliographies and bibliographic citations. In your markup within Lovecraft's texts, you'll likely most often be using title. Use title when the title of a work is referred to, and bibl when it's a fuller reference that might contain a title and an author, *or* is a reference to a "that book by so-and-so" which isn't really its title. 
            Use the @level attribute on title to control what kind of title it is: <title level="j"> for journal articles, and <title level="m"> for books (known as "monographs"). 
            <cit>, <quote>, and <bibl> are used together for a quoted passage in the text with a source attribution, like this:
            
            <cit><quote>To be, or not to be</quote><bibl><title level="m">Hamlet</title> by <author>William Shakespeare</author></bibl></cit>
            -->
           
            <!--Here's something you can do to make your text more searchable: The contents of <sic> might be worth pulling when you extract interesting words coded with <w>:
               <choice><sic>Esquimaux</sic><reg>Eskimo</reg></choice>-->
               
            <moduleRef key="analysis" include="w phr cl"/>
            <moduleRef key="header"/>         
            <moduleRef key="namesdates" include="persName placeName orgName location geo terrain listPerson person forename surname occupation nationality listOrg org listPlace place"/>
            <moduleRef key="textstructure" exclude="div1 div2 div3 div4 div5 div6 div7"/>
                  
            <classSpec ident="att.global" type="atts" mode="change" module="tei">
               <attList>
                  <attDef ident="lang" mode="add">
                     <desc>@lang is to be used to indicate a fictional or a "conlang" (constructed language), and takes a closed attribute list distinct to the project. In this project the @lang value "rly" designates the Cthulhu language, R'lyehian.</desc>
                     <valList type="closed">
                        <valItem ident="rly"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
         
            <!--<elementSpec ident="w" module="analysis" mode="change">
            <attList>
               <attDef ident="type" mode="replace" usage="rec">
                  <datatype>
                     <dataRef key="teidata.word"/>
                  </datatype>
                  <valList type="closed">
                     <valItem ident="lat"/>
                     <valItem ident="long"/>
                  </valList>
               </attDef> 
               <attDef ident="subtype" mode="replace" usage="rec">
                  <datatype>
                     <dataRef key="teidata.word"/>
                  </datatype>
                  <valList type="closed">
                     <valItem ident="fict"/>
                     <valItem ident="real"/>
                  </valList>
               </attDef> 
            </attList> 
         </elementSpec>-->
            <elementSpec module="namesdates" ident="geo" mode="change">
               <classes mode="change">
                  <memberOf key="att.typed" mode="add"/>  
               </classes>
               <constraintSpec scheme="isoschematron" ident="typing_geos">
                  <constraint>
                     <sch:rule context="tei:geo">
                        <sch:assert test="parent::tei:location">Geo elements must be wrapped in a location element to bind pairs of geo-coordinates together.</sch:assert>
                     </sch:rule>
                 <sch:rule context="tei:geo[@type='lat']">
                     <sch:assert test="matches(., '[NS]')">
                        When a geo element is marked as @type="lat", its text must contain "N" or "S".
                     </sch:assert>
                  </sch:rule>
                     <sch:rule context="tei:geo[@type='long']">
                        <sch:assert test="matches(., '[EW]')">
                           When a geo element marked as @type="long", its text must contain "E" or "W". 
                        </sch:assert>
                     </sch:rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="type" mode="replace" usage="rec">
                     <datatype>
                        <dataRef key="teidata.word"/>
                     </datatype>
                     <valList type="closed">
                        <valItem ident="lat"/>
                        <valItem ident="long"/>
                     </valList>
                  </attDef> 
                  <attDef ident="subtype" mode="replace" usage="rec">
                     <datatype>
                        <dataRef key="teidata.word"/>
                     </datatype>
                     <valList type="closed">
                        <valItem ident="fict"/>
                        <valItem ident="real"/>
                     </valList>
                  </attDef> 
               </attList>              
            </elementSpec>
         
            <constraintSpec scheme="isoschematron" ident="pair_geos">
             <constraint>
                <sch:rule context="tei:location">
                   <sch:assert test="count(tei:geo) = 2 and count(tei:geo[@type='lat']) = 1 and count(tei:geo[@type='long']) = 1">
                      The location element must have two geo element children. 
                      Of these, there must be one geo[@type='lat'] and one geo[@type='long'].
                   </sch:assert>
                </sch:rule>
             </constraint>
          </constraintSpec>
 
         </schemaSpec>
      </body>
  </text>
</TEI>
